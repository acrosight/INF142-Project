version: "3.1"

services:
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  # For visualizing docker data in browser
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example

  web-server:
    build:
      context: web-server
      dockerfile: Dockerfile
    image: web-server:latest
    restart: always
    ports:
      - 5000:5000
    environment:
      APP_PORT: 5000
      RUNNING_IN_DOCKER: "Yes"
      MONGODB_DATABASE: weatherstation
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: example
      MONGODB_HOSTNAME: mongo
      MONGODB_COLLECTION: sensorData
    depends_on:
      - mongo

  storage-server-udp:
    build:
      context: storage-server
      dockerfile: Dockerfile
    image: storage-server:latest
    restart: always
    ports:
      - 5550:5550/udp
    environment:
      SERVER_TYPE: UDP
      MONGODB_DATABASE: weatherstation
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: example
      MONGODB_HOSTNAME: mongo
      MONGODB_COLLECTION: sensorData
    depends_on:
      - mongo

  storage-server-tcp:
    build:
      context: storage-server
      dockerfile: Dockerfile
    image: storage-server:latest
    restart: always
    ports:
      - 5555:5555
    environment:
      SERVER_TYPE: TCP
      MONGODB_DATABASE: weatherstation
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: example
      MONGODB_HOSTNAME: mongo
      MONGODB_COLLECTION: sensorData
    depends_on:
      - mongo

  station-1:
    build:
      context: station
      dockerfile: Dockerfile
    image: station:latest
    restart: always
    environment:
      RUNNING_IN_DOCKER: "Yes"

  station-2:
    build:
      context: station
      dockerfile: Dockerfile
    image: station:latest
    restart: always
    environment:
      RUNNING_IN_DOCKER: "Yes"

  station-3:
    build:
      context: station
      dockerfile: Dockerfile
    image: station:latest
    restart: always
    environment:
      RUNNING_IN_DOCKER: "Yes"
